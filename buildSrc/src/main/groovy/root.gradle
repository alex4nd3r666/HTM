plugins {
    id 'common'
}

// Create a build.properties file at the root with all the preprocessor definitions
def writePreprocessorDefinitions() {
    StringBuilder sb = new StringBuilder();
    sb.append("# Preprocessor definitions generated by build script\n");

    // Add a number to each version, example: MC_1_19_4 = 0, MC_1_20_1 = 1, etc
    gradle.ext.mcVers.eachWithIndex { ver, idx ->
        sb.append("MC_${ver.replace('.', '_')}=${idx}\n")
        if (gradle.ext.mcIndex == idx) sb.append("MC_VER=${idx}\n") // Set the current version, example: if the current version is 1.20.1, then MC_VER = 1 (because MC_1_20_1 = 1)
    }

    new File(rootDir, "build.properties").text = sb.toString()
}
writePreprocessorDefinitions()

// Make JVMDowngrader downgrade the remapped jar
gradle.projectsEvaluated {
    rootProject.subprojects.each {
        if (it.tasks.findByName('remapJar') == null) return
        it.tasks.downgradeJar.inputFile = it.tasks.remapJar.archiveFile
        it.tasks.jar.finalizedBy(it.tasks.remapJar)
        it.tasks.remapJar.finalizedBy(it.tasks.shadeDowngradedApi)
    }
}